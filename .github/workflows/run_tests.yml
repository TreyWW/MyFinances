name: Backend Tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ "3.10", "3.11", "3.12" ]
        django-version: [ 4, 5 ]

    runs-on: ${{ matrix.os }}

    env:
      DOCKER_COMPOSE_PATH: ./infrastructure/backend/docker-compose.ci.yml

    steps:
      #----------------------------------------------
      #       Checkout code
      #----------------------------------------------
      - name: Checkout code
        uses: actions/checkout@v4

      #----------------------------------------------
      #       Set up Python
      #----------------------------------------------
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      #----------------------------------------------
      #       Install Poetry
      #----------------------------------------------
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          virtualenvs-create: false
          virtualenvs-in-project: false
          installer-parallel: true

      #----------------------------------------------
      #       Install Docker Compose
      #----------------------------------------------
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      #----------------------------------------------
      #       Copy Docker Compose file
      #----------------------------------------------
      - name: Copy Docker Compose file
        run: |
          cp $GITHUB_WORKSPACE/$DOCKER_COMPOSE_PATH ./docker-compose.yml

      #----------------------------------------------
      #       Build and run docker-compose.ci.yml
      #----------------------------------------------
      - name: Build and run docker-compose.ci.yml
        run: |
          export TESTING=true
          docker compose up -d --wait --wait-timeout 30

      #----------------------------------------------
      #       Run the test scripts
      #----------------------------------------------
      - name: Run Django tests
        run: |
          export TESTING=true
          docker compose exec -T myfinances_django ./infrastructure/backend/scripts/tests/views.sh


  coverage:
    name: Combine & check coverage
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v2
        with:
          python-version: "3.12"
      - run: python -Im pip install --upgrade coverage[toml]
      - uses: actions/download-artifact@v4
        with:
          pattern: coverage-data-*
          merge-multiple: true

      - name: Combine coverage & fail if it's <50%.
        run: |
          python -Im coverage combine
          python -Im coverage html --skip-covered --skip-empty
          # Report and write to summary.
          python -Im coverage report --format=markdown >> $GITHUB_STEP_SUMMARY
          # Report again and fail if under 50%.
          python -Im coverage report --fail-under=50
      - name: Upload HTML report if check failed.
        uses: actions/upload-artifact@v4
        with:
          name: html-report
          path: htmlcov
        if: ${{ failure() }}